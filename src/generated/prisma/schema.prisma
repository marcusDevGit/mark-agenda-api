// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                  @id @default(autoincrement())
  name               String
  email              String               @unique
  password           String
  role               Role                 @default(USER)
  appointments       Appointment[]
  creatadAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  passwordResetToken passwordResetToken[]
}

model Service {
  id           Int           @id @default(autoincrement())
  name         String
  descriptiom  String?
  duration     Int //minutos
  price        Float
  appointments Appointment[]
  creatadAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Appointment {
  id        Int      @id @default(autoincrement())
  date      DateTime
  notes     String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  service   Service  @relation(fields: [serviceId], references: [id])
  serviceId Int
  creatadAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  USER
}

model passwordResetToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
